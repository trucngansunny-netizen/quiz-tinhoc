# core.py ‚Äì M√¥-ƒëun trung t√¢m cho AI-TIN Web
import os
import json
from openpyxl import Workbook


# ==================================================
# üß© 1Ô∏è‚É£ H√ÄM T·∫¢I TI√äU CH√ç CH·∫§M
# ==================================================
def load_criteria(critfile, grade, folder="criteria"):
    """
    T·∫£i ti√™u ch√≠ ch·∫•m cho m·ªôt ph·∫ßn m·ªÅm (Word/PPT/Scratch) v√† kh·ªëi l·ªõp.
    ∆Øu ti√™n ƒë·ªçc file JSON t·ª´ th∆∞ m·ª•c criteria. 
    N·∫øu kh√¥ng c√≥ file, tr·∫£ v·ªÅ b·ªô ti√™u ch√≠ m·∫´u ƒë·ªÉ demo.
    """
    path = os.path.join(folder, f"{critfile}{grade}.json")
    if os.path.exists(path):
        try:
            with open(path, "r", encoding="utf-8") as f:
                return json.load(f)
        except Exception as e:
            print("L·ªói khi ƒë·ªçc ti√™u ch√≠:", e)
            return None

    # Tr∆∞·ªùng h·ª£p ch∆∞a c√≥ file JSON th√¨ tr·∫£ v·ªÅ ti√™u ch√≠ m·∫´u
    return {
        "tieu_chi": [
            {"mo_ta": "Ho√†n th√†nh ƒë√∫ng y√™u c·∫ßu b√†i", "diem": 5},
            {"mo_ta": "Tr√¨nh b√†y ƒë·∫πp, r√µ r√†ng", "diem": 3},
            {"mo_ta": "C√≥ y·∫øu t·ªë s√°ng t·∫°o", "diem": 2},
        ]
    }


# ==================================================
# üß© 2Ô∏è‚É£ H√ÄM CH·∫§M B√ÄI WORD
# ==================================================
def grade_word(file_path, criteria):
    """
    Gi·∫£ l·∫≠p ch·∫•m b√†i Word. Tr·∫£ v·ªÅ ƒëi·ªÉm v√† nh·∫≠n x√©t.
    Trong phi√™n b·∫£n th·ª±c t·∫ø, c√≥ th·ªÉ d√πng python-docx ƒë·ªÉ ki·ªÉm tra n·ªôi dung.
    """
    try:
        total = sum(item["diem"] for item in criteria["tieu_chi"])
        notes = [f"{item['mo_ta']} (+{item['diem']}ƒë)" for item in criteria["tieu_chi"]]
        return min(total, 10), notes
    except Exception as e:
        return None, [f"L·ªói khi ch·∫•m Word: {e}"]


# ==================================================
# üß© 3Ô∏è‚É£ H√ÄM CH·∫§M B√ÄI POWERPOINT
# ==================================================
def grade_ppt(file_path, criteria):
    """
    Gi·∫£ l·∫≠p ch·∫•m b√†i PowerPoint.
    C√≥ th·ªÉ d√πng python-pptx ƒë·ªÉ ƒë·ªçc n·ªôi dung slide trong t∆∞∆°ng lai.
    """
    try:
        total = sum(item["diem"] for item in criteria["tieu_chi"]) - 1  # v√≠ d·ª• ƒëi·ªÉm th·∫•p h∆°n 1
        notes = [f"{item['mo_ta']} (+{item['diem']}ƒë)" for item in criteria["tieu_chi"]]
        return min(total, 10), notes
    except Exception as e:
        return None, [f"L·ªói khi ch·∫•m PowerPoint: {e}"]


# ==================================================
# üß© 4Ô∏è‚É£ H√ÄM CH·∫§M B√ÄI SCRATCH
# ==================================================
def grade_scratch(file_path, criteria):
    """
    Gi·∫£ l·∫≠p ch·∫•m b√†i Scratch (.sb3)
    C√≥ th·ªÉ d√πng json ƒë·ªÉ ƒë·ªçc project.sb3 trong t∆∞∆°ng lai.
    """
    try:
        total = sum(item["diem"] for item in criteria["tieu_chi"]) - 2  # v√≠ d·ª• ƒëi·ªÉm th·∫•p h∆°n 2
        notes = [f"{item['mo_ta']} (+{item['diem']}ƒë)" for item in criteria["tieu_chi"]]
        return max(min(total, 10), 0), notes
    except Exception as e:
        return None, [f"L·ªói khi ch·∫•m Scratch: {e}"]


# ==================================================
# üß© 5Ô∏è‚É£ H√ÄM X·ª¨ L√ù T√äN H·ªåC SINH
# ==================================================
def pretty_name_from_filename(filename):
    """
    Chuy·ªÉn t√™n file th√†nh t√™n d·ªÖ ƒë·ªçc ƒë·ªÉ hi·ªÉn th·ªã.
    V√≠ d·ª•: 'le_thi_bich_3a1.docx' -> 'Le Thi Bich 3A1'
    """
    name = os.path.splitext(os.path.basename(filename))[0]
    name = name.replace("_", " ").replace("-", " ").title()
    return name


# ==================================================
# üß© 6Ô∏è‚É£ H√ÄM T·∫†O FILE EXCEL N·∫æU CH∆ØA C√ì
# ==================================================
def ensure_workbook_exists(path="ketqua_tonghop.xlsx"):
    """
    Ki·ªÉm tra n·∫øu file Excel t·ªïng h·ª£p ch∆∞a t·ªìn t·∫°i th√¨ t·∫°o m·ªõi.
    """
    if not os.path.exists(path):
        wb = Workbook()
        ws = wb.active
        ws.title = "T·ªîNG H·ª¢P"
        ws.append(["H·ªç t√™n h·ªçc sinh", "M√¥n", "ƒêi·ªÉm", "Nh·∫≠n x√©t"])
        wb.save(path)
    return path
